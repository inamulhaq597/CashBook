


export default function Dashboard() {
  var data = JSON.parse(localStorage.getItem("newdata"))

  var elements = [];
  var cashindata = [];
  var bookDetail = JSON.parse(localStorage.getItem("newbookData"))
  if (bookDetail == null) {
    bookDetail = []
  } else {
    bookDetail = JSON.parse(localStorage.getItem("newbookData"))
  }

  function addbook() {
    var maincantaner = document.getElementById("para")
    let minidiv = document.createElement("div");
    minidiv.setAttribute("class", "dosre");
    minidiv.setAttribute("id", "minidiv")
    maincantaner.appendChild(minidiv);

    // mine input
    var mineinput = document.createElement("INPUT");
    mineinput.setAttribute("class", "mniinput1");
    mineinput.setAttribute("id", "mj");
    mineinput.setAttribute("type", "text");
    minidiv.appendChild(mineinput);

    // btn add
    var minebutton = document.createElement("INPUT");
    minebutton.setAttribute("type", "button");
    minebutton.setAttribute("class", "minebtn")
    minebutton.setAttribute("value", "Save");
    minebutton.addEventListener("click", newbooksend)
    minidiv.appendChild(minebutton);

    // close icon
    var icon = document.createElement('div')
    icon.innerHTML = `<i class="fa fa-window-close" aria-hidden="true"></i>`
    icon.setAttribute("class", "crosbtn")
    minidiv.appendChild(icon);
    // close
    icon.addEventListener("click", () => close("minidiv"))



    // add function
    function newbooksend() {
      // alert("hello")
      var getinput = document.getElementById("mj").value

      elements.push(getinput);



      // localstorage
      const check = JSON.parse(localStorage.getItem("newdata"))


      if (check == null) {

        const localstor = localStorage.setItem("newdata", JSON.stringify(elements));
      } else {
        localStorage.setItem("newdata", JSON.stringify([...check, getinput]));
      }



    }


  }
  var name;
  var fil = [];
  function creatopen(value) {

    document.getElementById("createbook").style.display = "block";
    name = value
    
  var fil =  bookDetail.filter((arr) =>  arr.nameBook == value)
  console.log("fil", fil)

  }

  // add cash in btn function
  var cashvalue
  function cashin(value) {
    cashvalue = value
    document.getElementById("paymentdiv_container").style.display = "flex";

  }

  // saved button
  function saved() {
    alert("hello")
    var cash = document.getElementById("inputcash").value

    var remark = document.getElementById("remarkinput").value

    var selecter = document.getElementById("selectr").value

    var mode = document.getElementById("paymentmode").value

    // cashin object
    const cashinpayment = {
      nameBook: name,
      cashinput: cash,
      remarkinput: remark,
      selecterinput: selecter,
      modeinput: mode,
      cashout: cashvalue,
      date: new Date().toDateString(),
      time: new Date().toLocaleTimeString()
    }
    cashindata.push(cashinpayment);


    // localhost
    const cashinData = JSON.parse(localStorage.getItem("newbookData"))
    console.log("cashinData", cashinData)
    if (cashinData == null) {

      localStorage.setItem("newbookData", JSON.stringify(cashindata));
    } else {
      localStorage.setItem("newbookData", JSON.stringify([...cashinData, cashinpayment]));
    }


  }


  // send the data localstor to cashin totall div
  //  use filter mathod to saprate the cashin value
  var newCashin = bookDetail.filter(function (cash) {
    return cash.cashout == false
  }
  );



  // use a reduse mathode use for add cashin value
  const cashinSum = newCashin.reduce((accumulator, object) => {
    return accumulator + Number(object.cashinput);
  }, 0);

  // send the data localstor to cashout totall div
  //  use filter mathod to saprate the cashin value
  var newCashout = bookDetail.filter(function (cash) {
    return cash.cashout == true
  }
  );


  // use a reduse mathode use for add cashout value
  const cashOutSum = newCashout.reduce((accumulator, object) => {
    return accumulator + Number(object.cashinput);
  }, 0);

  //  totall ballance

  var totalBallance = cashinSum - cashOutSum



  // dellete button function

  function dellete(time) {

    const details = JSON.parse(localStorage.getItem("newbookData"))
    const filter = details.filter((value, index) => value.time !== time)
    console.log("Filer", filter);
    localStorage.setItem("newbookData", JSON.stringify(filter));

  }


  // close
  function close(id) {
    document.getElementById(id).style.display = "none";

  }
  window.onload = function () {
    // date
    var d = new Date();
    var b = document.getElementById('date')


    b.appendChild(document.createTextNode(d.toDateString()));
    // time
    var time = document.getElementById("Time")
    time.appendChild(document.createTextNode(d.toLocaleTimeString()));
  }

  return (
    <>
      <div className="min-h-screen">
        <header>
          {/*Nav*/}
          <nav aria-label="menu nav" className="bg-gray-800  p-2 w-full ">
            <div className="flex flex-wrap items-center">
              <div className="flex flex-shrink md:w-1/3 justify-center md:justify-start text-white">

              </div>
              <div className="flex flex-1 md:w-1/3 justify-center md:justify-start text-white px-2">
                <span className="relative w-full">
                  <input aria-label="search" type="search" id="search" placeholder="Search" className="w-full bg-gray-900 text-white transition border border-transparent focus:outline-none focus:border-gray-400 rounded py-3 px-2 pl-10 appearance-none leading-normal" />
                  <div className="absolute search-icon" style={{ top: '1rem', left: '.8rem' }}>
                    <svg className="fill-current pointer-events-none text-white w-4 h-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                      <path d="M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z" />
                    </svg>
                  </div>
                </span>
              </div>
              <div className="flex w-full pt-2 content-center justify-between md:w-1/3 md:justify-end">
                <ul className="list-reset flex justify-between flex-1 md:flex-none items-center">
                  <li className="flex-1 md:flex-none md:mr-3">
                    <a className="inline-block py-2 px-4 text-white no-underline hover:text-red-400 font-bold" href="#">Log in</a>
                  </li>

                  <li className="flex-1 md:flex-none md:mr-3">
                    <a className="inline-block py-2 px-4 text-white no-underline hover:text-red-400  font-bold" href="#">Settings</a>
                  </li>
                </ul>
              </div>
            </div>
          </nav>
        </header>
        <main className="grid grid-cols-7 min-h-screen ">
          <nav aria-label="alternative nav  min-h-screen col-span-2 ">
            <div className="bg-gray-800 shadow-xl h-full  bottom-0  md:relative  z-10 w-full  content-center" style={{ height: '100% !important' }}>
              <div id="newbookadd" className="   ">
                <ul className="list-reset flex  flex-row md:flex-col items-center justify-center pt-3 md:py-3 px-1 md:px-2 text-center md:text-left">



                  <li className=" flex justify-center w-full">
                    <a href="#" className="block  ">

                      {/* side bar button */}
                      <button className="main_button " onClick={addbook}>

                        Add New Book
                      </button>

                    </a>
                  </li>
                  {data && data.map((value) =>
                  (
                    <>
                      <a className="block py-3 px-8 w-full mt-2  " onClick={()=>creatopen(value)} >

                        <li className="border-solid whitespace-nowrap rounded-tl-3xl  w-full text-center  font-bold hover:bg-gradient-to-r from-blue-900 to-gray-800 hover:text-white text-white border border-[#1F387E] rounded  py-3   ">{value}</li>
                      </a>
                    </>
                  ))}


                </ul>
              </div>
            </div>
          </nav>
          <div className=" col-span-7 md:col-span-6  ">


            <section className="w-full  ">
              {/* app name */}
              <div className="bg-gray-800 ">
                <div className="rounded-tl-3xl bg-gradient-to-r from-blue-900 to-gray-800 p-4 shadow text-2xl text-white">
                  <h1 className="lg:font-bold text-3xl pl-2">Mayra Hasab NALO NAL</h1>
                </div>
              </div>

              <div id="main" className="  h-full">

                <div id="para" className="flex flex-row   flex-wrap h-auto flex-grow  justify-center items-center ">

                  {/* create new book div book name waly button sy open hoti */}
                  <div id="createbook" className="  hidden  bg-gradient-to-r from-gray-900 to-blue-900 container border-2 border-blue-900 h-auto">
                    {/* input */}
                    <div className="mb-8 p-4 ">
                      <span className="relative  w-1/3">
                        <input aria-label="search" type="search" id="search" placeholder="Search" className="w-1/3 bg-white text-black  border outline-none border-blue-900  rounded py-3 px-2 pl-10 " />
                        <div className="absolute search-icon -mt-8 " style={{ left: '.8rem' }}>
                          <svg className="fill-current pointer-events-none text-black w-4 h-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                            <path d="M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z" />
                          </svg>
                        </div>
                      </span>

                      <div onClick={() => close("createbook")} className=" text-start text-white  w-1/6 -mt-14 p-2"><i class="fa fa-window-close" aria-hidden="true"></i></div>
                    </div>




                    <div className=" mb-6 p-2 flex text-left text-white text-lg   w-full">

                      {/* catigaaryyy */}
                      {/* 1 */}
                      <div className=" py-2 rounded-tl-3xl  flex border border-blue-900 hover:border-white w-1/3">
                        <div className=" w-1/3 pr-1 text-right">
                          <i class="fa fa-plus-circle pr-1 text-green-600" aria-hidden="true"></i>
                        </div>
                        <div className="w-1/3 font-bold text-left">Cash in </div>
                        <div id="cashoutdiv" className="w-1/3 font-bold  text-center">{cashinSum}</div>
                      </div>



                      {/* 2 */}
                      <div className=" py-2  flex border border-blue-900 hover:border-white w-1/3">
                        <div className="w-1/3 pr-1 text-right">
                          <i class="fa fa-minus-circle pr-1 text-red-600" aria-hidden="true"></i>
                        </div>
                        <div className="w-1/3 font-bold text-left">Cash Out</div>
                        <div className="w-1/3 font-bold  text-center">{cashOutSum}</div>
                      </div>

                      {/* 3 */}
                      <div className=" rounded-tr-3xl  flex border py-2 border-blue-900 hover:border-white w-1/3">
                        <div className="w-1/3 pr-1 text-right">
                          <i class="fa fa-balance-scale pr-1 text-blue-400" aria-hidden="true"></i>
                        </div>
                        <div className=" w-1/3  font-bold text-left">Net Balance</div>
                        <div className=" w-1/3 font-bold  text-center">{totalBallance}</div>
                      </div>






                    </div>




                    {/* btn cash in out */}
                    <div className="space-x-14 p-2 mb-3">
                      <button onClick={() => cashin(false)} className="border-solid rounded-tl-3xl   text-center  font-bold hover:bg-gradient-to-r from-blue-900 to-gray-800 hover:text-white text-white border border-[#1F387E] hover:border-white rounded  py-2 px-8 ">

                        Cash In
                      </button>

                      <button onClick={() => cashin(true)} className="border-solid rounded-tl-3xl   text-center  font-bold hover:bg-gradient-to-r from-blue-900 to-gray-800 hover:text-white text-white border border-[#1F387E] rounded hover:border-white py-2 px-7">

                        Cash Out
                      </button>
                    </div>

                    {/* add entery div nav*/}
                    <div className="px-2">
                      <div className="border border-white p-2 w-full font-bold flex">
                        <div className="text-white w-56 ">Date</div>
                        <div className="text-white w-56 ">Time</div>
                        <div className="text-white w-56 ">Details</div>
                        <div className="text-white w-56 ">Category</div>
                        <div className="text-white w-56 ">Mode</div>
                        <div className="text-white w-40 ">Amount</div>

                      </div>
                    </div>

                    {/* add entery */}

                    {
                      bookDetail.map((value) => (
                      <>
                        {console.log("looog", value)}
                        <div className="px-2">
                          <div id="dell" className="p-2 w-full font-bold flex">
                            <div id="dell" className="text-white w-56 ">{value.date}</div>
                            <div id="dell" className="text-white w-56 ">{value.time}</div>
                            <div id="dell" className="text-white w-56 " >{value.remarkinput}</div>
                            <div id="dell" className="text-white w-56 ">{value.selecterinput}</div>
                            <div id="dell" className="text-white w-56 ">{value.modeinput}</div>
                            <div id="dell" className={`${value.cashout == true ? "text-red-600 w-40" : "text-green-600 w-40"}  `}>{value.cashinput} </div>
                            <button onClick={() => dellete(value.time)} className="w-12"><i class="fa fa-trash text-white " aria-hidden="true"></i></button>


                          </div>
                        </div>
                      </>
                    ))}


                  </div>






                  {/* cash in add payment div jo cash in k button sy open hoti */}

                  <div className="fixed inset-0 backdrop-blur-sm  justify-center items-center hidden z-20" id="paymentdiv_container">

                    <div id="paymentdiv" className="paymentdiv    mt-12 rounded bg-gradient-to-r from-gray-900 to-blue-900 container border-2 border-blue-900 w-1/2 h-auto ">

                      <div className=" border-b flex">

                        <div className="w-1/2 text-white text-start p-4  text-2xl ">Add Cash In </div>
                        <div className=" text-white text-end p-4 w-1/2">
                          <i onClick={() => close("paymentdiv_container")} class="fa fa-window-close" aria-hidden="true"></i>
                        </div>

                      </div>
                      <div className="flex p-2">
                        {/* date */}
                        <div id="date" className="  text-white p-2   w-1/2 h-10">
                          <i class="fa fa-calendar p-2 text-white" aria-hidden="true"></i>
                        </div>
                        {/* time */}
                        <div id="Time" className="  text-white p-2  w-1/2 h-10">
                          <i class="fa fa-clock p-2 text-white" aria-hidden="true"></i>
                        </div>
                      </div>
                      {/* input */}
                      <div className="mb-2 p-2  ">
                        <span cclassName="relative  w-1/4">
                          <input aria-label="Amount" type="number" placeholder="Amount" className="w-2/3 bg-white text-black font-boldq border outline-none border-blue-900  rounded py-3 px-2 pl-10 " id="inputcash" />
                        </span>
                      </div>
                      {/* remarks input */}

                      <div className=" p-2  w-full ">
                        <span className="relative  ">
                          <input aria-label="Amount" type="text" id="remarkinput" placeholder="Remark" className="w-2/3 bg-white text-black font-boldq border outline-none border-blue-900 rounded py-3  pl-10 " />
                        </span>
                      </div>
                      {/* Category input */}
                      <div className=" justify-center  flex p-4 mb-4 ">
                        <div className="w-1/2  justify-end flex">
                          <select id="selectr" className="bg-white mr-1 text-gray-400 py-3  px-2 w-2/3 rounded"  >
                            <option value={""}>Search or Select</option>
                            <option>Bill</option>
                            <option>Food</option>
                            <option>Labour Chargers</option>


                          </select>
                        </div>



                        <div className="w-1/2  justify-start flex ">
                          <select id="paymentmode" className="bg-white ml-1 text-gray-400  py-3 px-2 w-2/3 rounded"  >
                            <option value={""}>Payment Mode</option>
                            <option>Cash</option>
                            <option>Online</option>



                          </select>
                        </div>
                      </div>
                      {/* save */}
                      <div className="p-4">
                        <button onClick={saved} className="border-solid rounded-tl-3xl   text-center  font-bold hover:bg-gradient-to-r from-blue-900 to-gray-800 hover:text-white text-white border border-[#1F387E] hover:border-white rounded  py-3 px-12 ">

                          Save
                        </button>
                      </div>
                    </div>
                  </div>
                  `
                </div>
              </div>
            </section>
          </div>
        </main>
      </div>



    </>
  )
}

